generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BetaKey {
  id    String @id @default(cuid())
  value String

  betaUser BetaUser?

  @@map("beta_keys")
}

model BetaUser {
  id         String   @id @default(cuid())
  validUntil DateTime
  createdAt  DateTime @default(now())

  betaKeyId String @unique
  userId    String @unique

  user    User    @relation(fields: [userId], references: [id])
  betaKey BetaKey @relation(fields: [betaKeyId], references: [id])

  @@map("beta_users")
}

model User {
  id        String @id @default(cuid())
  name      String
  lastName  String @map("last_name")
  email     String @unique
  password  String
  birthDate String @map("birth_date")
  country   String

  betaUser    BetaUser?
  userProfile UserProfile?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("users")
}

model UserProfile {
  id            String   @id @default(cuid())
  username      String?
  description   String?
  roles         String[]
  techonologies String[]

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@map("users_profile")
}

enum OrganizationType {
  DEVELOPER
  TEAM
  ENTERPRISE

  @@map("organization_type")
}

model Organization {
  id          String           @id @default(cuid())
  name        String
  ownerId     String           @map("owner_id")
  description String?
  plan        OrganizationType

  projectsAmount   Int? @default(0)
  developersAmount Int? @default(0)

  projects   Project[]
  developers UserProfile[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("organizations")
}

model Project {
  id          String @id @default(cuid())
  name        String
  description String

  notes          Note[]
  Organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?

  @@map("projects")
}

model Note {
  id      String   @id @default(cuid())
  Project Project? @relation(fields: [projectId], references: [id])

  projectId String?
}

model Schedule {
  id String @id @default(cuid())

  @@map("schedules")
}

model Routes {
  id String @id @default(cuid())

  @@map("routes")
}

model Service {
  id String @id @default(cuid())

  @@map("services")
}

model Database {
  id String @id @default(cuid())

  @@map("databases")
}

model Schema {
  id String @id @default(cuid())

  @@map("schemas")
}

model Assignment {
  id String @id @default(cuid())

  @@map("assignments")
}

model Task {
  id String @id @default(cuid())

  @@map("tasks")
}
